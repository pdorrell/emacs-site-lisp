(defvar preview-postscript-executable "gsview32.exe")

(add-hook 'ps-mode-hook 'postscript-hook-function)

(defun postscript-hook-function ()
  (local-set-key [?\M-N] 'preview-postscript)
  (font-lock-mode 1)
  (message "postscript-hook-function")
  ;(local-set-key [C-kp-right] 'up-value-1)
  ;(local-set-key [C-kp-left] 'down-value-1)
  ;(local-set-key [C-kp-up] 'up-value-5)
  ;(local-set-key [C-kp-down] 'down-value-5)
  ;(local-set-key [C-M-S-kp-up] 'up-value-20)
  ;(local-set-key [C-M-S-kp-down] 'down-value-20)
  )

(defun preview-postscript ()
  (interactive)
  (save-buffer)
  (start-process "*postscript-preview*" "*postscript-preview*" preview-postscript-executable "-e" (buffer-name)) )

(defun up-value-1 ()
  (interactive)
  (increase-value 1) )

(defun down-value-1 ()
  (interactive)
  (increase-value -1) )

(defun up-value-5 ()
  (interactive)
  (increase-value 5) )

(defun down-value-5 ()
  (interactive)
  (increase-value -5) )

(defun up-value-20 ()
  (interactive)
  (increase-value 20) )

(defun down-value-20 ()
  (interactive)
  (increase-value -20) )

(defun increase-value (delta)
  (backward-char)
  (while (looking-at "[0-9]")
    (backward-char) )
  (forward-char)
  (if (looking-at "[0-9]*")
      (let* ( (start (match-beginning 0))
	      (end (match-end 0))
	      (number (apply #'buffer-substring (match-data 0))) )
	(message "number is %S" number)
	(setq value (string-to-number number))
	(setq value (+ value delta))
	(delete-region start end)
	(insert (number-to-string value))
	(preview-postscript) )
    (message "No number at cursor position") ) )
